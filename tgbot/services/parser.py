from datetime import datetime, timedelta
from pyrogram import Client


time = datetime.now() - timedelta(days=2)


class Parser:
    def __init__(self, bot):
        self.client = Client(
            'client',
            api_id=25754771,
            api_hash='9583abf828fa887a61b6d6e61945e0ea'
        )
        self.bot = bot
        self.config = bot.config
        self.data = bot.config.data

    # –ß–∏—Ç–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–∞—Ö –∏ –ø–∞—Ä—Å–∏–º –∏—Ö
    async def pars(self):
        pars, pars_id, pars_word = await self.data.get_pars_config()
        if not pars:
            return pars
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        async with self.client as client:
            for i in pars_id:
                # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
                async for message in client.get_chat_history(int(i)):
                    txt = message.caption if message.caption else message.text
                    # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞ 30 –¥–Ω–µ–π
                    if message.date < time:
                        break
                    else:
                        print(message.date, ':', message.chat.title, ':', message.text)

                        chat = await client.get_chat(i)
                        link = (f'<a href="t.me/{message.from_user.username}">{message.from_user.first_name}</>'
                                if message.from_user.username else message.from_user.first_name)
                        text = [
                          f"üîî <b>{chat.title} | {link}</>\n",
                          txt
                        ]

                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        await self.bot.send_message(self.config.admin, '\n'.join(text), disable_web_page_preview=True)
